<schema xmlns="http://purl.oclc.org/dsdl/schematron">
    <ns prefix="csip" uri="DILCIS"/>
    <ns prefix="ead" uri="urn:isbn:1-931666-22-9"/>
    <ns prefix="mets" uri="http://www.loc.gov/METS/"/>
    <pattern id="METS_root_element_validation">
        <title>Validate METS root element.</title>
        <rule id="CSIP1-Root-element-validation" context="mets:mets">
            <assert test="name()='mets:mets'">The root level element is required in all METS documents</assert>
        </rule>
    </pattern>
    <pattern id="METS_root_element_object_id_validation">
        <title>Validate METS root element.</title>
        <rule id="CSIP2-OBJID-validation" context="mets:mets">
            <assert test="@OBJID">It is recommended that it be the same as the name or ID of the package (the name of the root folder). The OBJID must meet the CS IP requirement of being unique at least across the repository.</assert>
        </rule>
    </pattern>
    <pattern id="METS_root_element_type_validation">
        <rule id="CSIP3-TYPE-existence" context="mets:mets">
            <assert test="@TYPE">General content type attribute does not exist.</assert>
        </rule>
        <rule id="CSIP4-CONTENTTYPESPECIFICATION-existence" context="mets:mets">
            <assert test="@csip:CONTENTTYPESPECIFICATION">Content information type attribute does not exist.</assert>
        </rule>
    </pattern>
    <pattern id="METS_root_element_value_validation">
        <rule id="CSIP4-CONTENTTYPESPECIFICATION-value" context="mets:mets">
            <assert test="(contains(string(@csip:CONTENTTYPESPECIFICATION), 'SMURFERMS') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'SMURFSFSB') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'SIARD1') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'SIARD2') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'SIARDDK') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'GeoVectorGML') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'GeoRasterGeotiff') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'MIXED') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'OTHER'))">Content information type attribute value is not known. Known values are: SMURFERMS, SMURFSFSB, SIARD1, SIARD2, SIARDDK, GeoVectorGML, GeoRasterGeotiff, MIXED, OTHER.</assert>
        </rule>
    </pattern>
    <pattern id="METS_root_element_other_type_validation">
        <rule id="CSIP5-CONTENTTYPESPECIFICATION-OTHER" context="mets:mets">
            <assert test="(contains(string(@csip:CONTENTTYPESPECIFICATION), 'SMURFERMS') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'SMURFSFSB') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'SIARD1') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'SIARD2') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'SIARDDK') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'GeoVectorGML') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'GeoRasterGeotiff') or contains(string(@csip:CONTENTTYPESPECIFICATION), 'MIXED') or (contains(string(@csip:CONTENTTYPESPECIFICATION), 'OTHER' and @csip:OTHERCONTENTTYPESPECIFICATION)))">If the value of a CONTENTTYPESPECIFICATION attribute is "OTHER", then the OTHERCONTENTTYPESPECIFICATION attribute must be used</assert>
        </rule>
    </pattern>
    <pattern id="METS_root_element_profile_validation">
        <rule id="CSIP6-PROFILE-url" context="mets:mets">
            <assert test="contains(string(@PROFILE), 'http://')">The PROFILE attribute has to have as its value the URL of the used profile.</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_element_validation">
        <title>Validate METS header element dmdSec.</title>
        <rule id="CSIP20-dmdSec-validation" context="mets:dmdSec">
            <assert test="name()='mets:dmdSec'">Must be used if descriptive metadata about the package content is available.
NOTE: According to official METS documentation each metadata section must describe one and only one set of metadata. As such, if implementers want to include multiple occurrences of descriptive metadata into the package this must be done by repeating the whole dmdSec element for each individual metadata.</assert>
        </rule>
    </pattern>
    <pattern id="METS_descriptive_metadata_element_id_validation">
        <rule id="CSIP21-ID-existence" context="mets:dmdSec">
            <assert test="@ID">Mandatory, identifier must be unique within the package.</assert>
        </rule>
    </pattern>
    <pattern id="METS_descriptive_metadata_element_admid_validation">
        <rule id="CSIP22-ADMID-existence" context="mets:dmdSec">
            <assert test="@ADMID">In case administrative (provenance) metadata is available and described within METS about changes to the descriptive metadata, this element must reference the appropriate ID of the administrative metadata section.</assert>
        </rule>
    </pattern>
    <pattern id="METS_descriptive_metadata_element_package_creation_date_validation">
        <rule id="CSIP23-CREATED-existence" context="mets:dmdSec">
            <assert test="@CREATED">Required by this specification. Creation date of the metadata in this section, needed to track changes to metadata files.</assert>
        </rule>
    </pattern>
    <pattern id="METS_descriptive_metadata_element_status_validation">
        <rule id="CSIP24-STATUS-existence" context="mets:dmdSec">
            <assert test="@STATUS">Status of the metadata. Recommended for use to indicate currency of package. If used it is recommended to use one of the two values “SUPERSEDED” or “CURRENT”.</assert>
        </rule>
    </pattern>
    <pattern id="METS_descriptive_metadata_element_package_creation_date_validation">
        <rule id="CSIP25-Reference-existence" context="mets:dmdSec">
            <assert test="name()='mets:mdRef'">Reference to the descriptive metadata file stored in the “metadata” folder of the IP.
In each occurrence of the dmdSec exactly one occurrence of the mdRef element must be present.</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_element_location_locator_type_validation">
        <rule id="CSIP26-locator-type-existence" context="mets:mdRef">
            <assert test="@xlink:href">Specifies the locator type used in the @xlink:href attribute which points to the file. The @LOCTYPE attribute is mandatory in the CS IP</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_element_location_locator_type_value_url_validation">
        <rule id="CSIP27-locator-type-value-is-url-check" context="mets:mdRef">
            <assert test="contains(string(@LOCTYPE), 'URL')">Within the CS IP the value of @LOCTYPE attribute must be “URL”.</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_element_location_xlink_type_validation">
        <rule id="CSIP28-locator-xlink-type-existence" context="mets:mdRef">
            <assert test="@xlink:type">The type of the link. The @xlink:type attribute is mandatory in the CS IP</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_element_location_xlink_type_value_validation">
        <rule id="CSIP29-xlink-type-value-is-simple-check" context="mets:mdRef">
            <assert test="contains(string(@xlink:type), 'simple')">The CS IP requires the use of @xlink:type attribute with the fixed value “simple”</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_element_location_xlink_href_validation">
        <rule id="CSIP30-locator-xlink-href-existence" context="mets:mdRef">
            <assert test="@xlink:href">The actual location of the resource. This specification requires the recording of an URL type filepath within this attribute. Further, the filepath must be decoded consistently throughout all mdRef elements within the information package, and follow the requirements for referencing as described in Section 5.2.</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_element_mdtype_validation">
        <rule id="CSIP31-mdtype-existence" context="mets:mdRef">
            <assert test="@MDTYPE">Specifies the type of metadata in the linked file. Values should be taken from the METS list provided.</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_core_mimetype_validation">
        <rule id="CSIP32-core-mimetype-existence" context="mets:mdRef">
            <assert test="@MIMETYPE">The IANA media type for the external file, mandatory in CS IP</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_core_size_validation">
        <rule id="CSIP33-core-size-existence" context="mets:mdRef">
            <assert test="@SIZE">Size of linked file in bytes, mandatory in CS IP</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_core_created_validation">
        <rule id="CSIP34-core-created-existence" context="mets:mdRef">
            <assert test="@CREATED">Date the linked file was created, mandatory in CS IP</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_core_checksum_validation">
        <rule id="CSIP35-core-checksum-existence" context="mets:mdRef">
            <assert test="@CHECKSUM">The checksum of the linked file, mandatory in CS IP</assert>
        </rule>
    </pattern>

    <pattern id="METS_descriptive_metadata_core_checksumtype_validation">
        <rule id="CSIP36-core-checksumtype-existence" context="mets:mdRef">
            <assert test="@CHECKSUMTYPE">The type of checksum used for calculating the checksum of the linked file, mandatory in CS IP</assert>
        </rule>
    </pattern>

</schema>
